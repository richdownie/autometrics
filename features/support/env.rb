# IMPORTANT: This file was generated by Cucumber 0.4.4
# Edit at your own peril - it's recommended to regenerate this file
# in the future when you upgrade to a newer version of Cucumber.
# Consider adding your own code to a new file instead of editing this one.
require 'logger'
require 'cucumber'
require 'broach'
# Comment out the next line if you don't want Cucumber Unicode support
require 'cucumber/formatter/unicode'
# require 'cucumber/webrat/element_locator' # Lets you do table.diff!(element_at('#my_table_or_dl_or_ul_or_ol').to_table)
# require 'cucumber/rails/rspec'
require 'test/unit/assertions'
include Test::Unit::Assertions


=begin
require 'webrat'
require 'webrat/core/matchers'

Webrat.configure do |config|
  config.mode = :rails
  config.open_error_files = false # Set to true if you want error pages to pop up in the browser
end
=end

if ENV['SAFARIWATIR']
  require 'safariwatir'
  Browser = Watir::Safari
  browser = Browser.new
elsif ENV['FIREWATIR']
  require "rubygems"
  require "watir-webdriver" 
  browser = Watir::Browser.new(:firefox) 
elsif ENV['CHROMEWATIR']
  require 'chrome_watir'
  Browser = ChromeWatir::Browser
  browser = Browser.new
else
  case RUBY_PLATFORM
  when /darwin/
    require 'firewatir'
    Browser = FireWatir::Firefox
    browser = Browser.new
  when /win32|mingw/
    require 'watir'
    require 'win32ole'
    Browser = Watir::IE
    browser = Browser.new
    browser.speed = :fast
  when /java/
    require 'celerity'
    Browser = Celerity::Browser
    browser = Browser.new
  else
    raise "This platform is not supported (#{PLATFORM})"
  end
end


Before do
  @browser = browser
  @random = rand(9999999).to_s
  # @autometrics = "http://localhost:3000"
  @autometrics = "http://autometrics.heroku.com"

  @account_service_url = "https://qaaccount.rollstream.com/"
  @community_url = "https://qaauto.rollstream.com/"
  @anonymous_reg = "anonymous_user_request/11/3334de0ca876c420768e28754d9d6cf696b81abe"

  # @account_service_url = "https://stgaccount.rollstream.com/"
  # @community_url = "https://stgwiley.rollstream.com/"
  # @anonymous_reg = "anonymous_user_request/11/5d6802cf145632cdd6bc36654903f71e4f423caf"

  @sso_url = @community_url + "authentication/sso"
  @sso_source = "MySystem"
  @sso_secret = "74421ea5268fc9a494f3ca69335754c831e9d064"
  # @community_url = "http://localhost:3000/"
end

start_time = Time.now.to_i
hour = Time.now.hour
# day = Time.now.strftime("%a")


# if hour <= 6 || hour >= 18
#         Broach.settings = { 'account' => 'rollstream', 'token' => 'cc31a48b6261fc8263d83d115ae212cd5bd5166b' }
#         Broach.speak('Experiment Room', "*******************************************************************************************")
#         Broach.speak('Experiment Room', "cucumber " + "#{scenario.backtrace_line}")
#         Broach.speak('Experiment Room', "Exception " + "#{scenario.exception.message}")
#     end
#   end
# 
#   at_exit do  
#     Broach.settings = { 'account' => 'rollstream', 'token' => 'cc31a48b6261fc8263d83d115ae212cd5bd5166b' }
#     Broach.speak('Experiment Room', "Browser: " + "#{browser}")
#     Broach.speak('Experiment Room', "Total Run Time " + "#{Time.now.to_i - start_time}" + " seconds")
#     Broach.speak('Experiment Room', "*******************************************************************************************")

# end

After do |scenario|
  if(scenario.failed?)
    @browser.goto(@autometrics + "/home/dump?push=#{scenario.backtrace_line}")
  end
end